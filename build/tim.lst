ARM GAS  /var/folders/1q/c92fndb943774rkwjp6mf3kh0000gn/T//ccymVkfe.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"tim.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_TIMERIC_Init,"ax",%progbits
  16              		.align	1
  17              		.global	MX_TIMERIC_Init
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	MX_TIMERIC_Init:
  25              	.LFB38:
  26              		.file 1 "Core/Src/tim.c"
   1:Core/Src/tim.c **** /**
   2:Core/Src/tim.c ****   ******************************************************************************
   3:Core/Src/tim.c ****   * File Name          : TIM.c
   4:Core/Src/tim.c ****   * Description        : This file provides code for the configuration
   5:Core/Src/tim.c ****   *                      of the TIM instances.
   6:Core/Src/tim.c ****   ******************************************************************************
   7:Core/Src/tim.c ****   * @attention
   8:Core/Src/tim.c ****   *
   9:Core/Src/tim.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Core/Src/tim.c ****   * All rights reserved.</center></h2>
  11:Core/Src/tim.c ****   *
  12:Core/Src/tim.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/tim.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/tim.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/tim.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/tim.c ****   *
  17:Core/Src/tim.c ****   ******************************************************************************
  18:Core/Src/tim.c ****   */
  19:Core/Src/tim.c **** 
  20:Core/Src/tim.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/tim.c **** #include "tim.h"
  22:Core/Src/tim.c **** #include "fifo.h"
  23:Core/Src/tim.c **** 
  24:Core/Src/tim.c **** /* USER CODE BEGIN 0 */
  25:Core/Src/tim.c **** TIM_HandleTypeDef htim3;
  26:Core/Src/tim.c **** extern fifo_typedef SRF_fifo;
  27:Core/Src/tim.c **** /* USER CODE END 0 */
  28:Core/Src/tim.c **** 
  29:Core/Src/tim.c **** //TIM_HandleTypeDef htim3;
  30:Core/Src/tim.c **** 
  31:Core/Src/tim.c **** /* TIM3 init function */
  32:Core/Src/tim.c **** 
ARM GAS  /var/folders/1q/c92fndb943774rkwjp6mf3kh0000gn/T//ccymVkfe.s 			page 2


  33:Core/Src/tim.c **** void MX_TIMER_Init(void)
  34:Core/Src/tim.c **** {
  35:Core/Src/tim.c ****   //Enabler Timer clock
  36:Core/Src/tim.c ****   __HAL_RCC_TIM3_CLK_ENABLE();
  37:Core/Src/tim.c **** //  mw32(0x40021038,0x10020001); // Enable TIM3 clock
  38:Core/Src/tim.c ****   //Configure Timer base
  39:Core/Src/tim.c ****   htim3.Instance = TIM3;
  40:Core/Src/tim.c ****   htim3.Instance->PSC = 0;
  41:Core/Src/tim.c ****   htim3.Instance->ARR = 0xFFFF;
  42:Core/Src/tim.c **** //  htim3.Instance->CR1 = TIM_CR1_CEN;
  43:Core/Src/tim.c **** 
  44:Core/Src/tim.c ****  /* Configure interrupt */ 
  45:Core/Src/tim.c ****   HAL_NVIC_SetPriority(TIM3_IRQn, 1, 0);
  46:Core/Src/tim.c ****   HAL_NVIC_EnableIRQ(TIM3_IRQn);
  47:Core/Src/tim.c **** 
  48:Core/Src/tim.c **** //  MX_TIMERIC_Init();
  49:Core/Src/tim.c ****   MX_TIMERIC_Init();
  50:Core/Src/tim.c **** 
  51:Core/Src/tim.c **** /* Timer needs to be enabled by writing 0x01 to CR1 */
  52:Core/Src/tim.c ****   MX_TIMER_Enable();
  53:Core/Src/tim.c **** }
  54:Core/Src/tim.c **** 
  55:Core/Src/tim.c **** void MX_TIMERIC_Init(void)
  56:Core/Src/tim.c **** {
  27              		.loc 1 56 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  57:Core/Src/tim.c ****   //Disable Timer before changing the IC registers
  58:Core/Src/tim.c ****   htim3.Instance->CR1 = 0x00;
  32              		.loc 1 58 3 view .LVU1
  33              		.loc 1 58 8 is_stmt 0 view .LVU2
  34 0000 084B     		ldr	r3, .L2
  35 0002 1968     		ldr	r1, [r3]
  36              		.loc 1 58 23 view .LVU3
  37 0004 0022     		movs	r2, #0
  38 0006 0A60     		str	r2, [r1]
  59:Core/Src/tim.c ****   //Set timer base
  60:Core/Src/tim.c ****   htim3.Instance->PSC = 0;
  39              		.loc 1 60 3 is_stmt 1 view .LVU4
  40              		.loc 1 60 8 is_stmt 0 view .LVU5
  41 0008 1B68     		ldr	r3, [r3]
  42              		.loc 1 60 23 view .LVU6
  43 000a 9A62     		str	r2, [r3, #40]
  61:Core/Src/tim.c ****   htim3.Instance->ARR = 0xFFFF;
  44              		.loc 1 61 3 is_stmt 1 view .LVU7
  45              		.loc 1 61 23 is_stmt 0 view .LVU8
  46 000c 0649     		ldr	r1, .L2+4
  47 000e D962     		str	r1, [r3, #44]
  62:Core/Src/tim.c **** 
  63:Core/Src/tim.c ****   //Configure input capture IC1 and IC2, PB4 --> IC1/2
  64:Core/Src/tim.c ****   htim3.Instance->SR = 0x0000; // Clean interrupt status register
  48              		.loc 1 64 3 is_stmt 1 view .LVU9
  49              		.loc 1 64 22 is_stmt 0 view .LVU10
  50 0010 1A61     		str	r2, [r3, #16]
  65:Core/Src/tim.c ****   htim3.Instance->CCMR1 = 0x0201; // IC2 = TI1, IC1 = TI1
ARM GAS  /var/folders/1q/c92fndb943774rkwjp6mf3kh0000gn/T//ccymVkfe.s 			page 3


  51              		.loc 1 65 3 is_stmt 1 view .LVU11
  52              		.loc 1 65 25 is_stmt 0 view .LVU12
  53 0012 064A     		ldr	r2, .L2+8
  54 0014 9A61     		str	r2, [r3, #24]
  66:Core/Src/tim.c ****   htim3.Instance->CCER = 0x0031; // IC2 falling edge, IC1 rising edge
  55              		.loc 1 66 3 is_stmt 1 view .LVU13
  56              		.loc 1 66 24 is_stmt 0 view .LVU14
  57 0016 D13A     		subs	r2, r2, #209
  58 0018 FF3A     		subs	r2, r2, #255
  59 001a 1A62     		str	r2, [r3, #32]
  67:Core/Src/tim.c ****   htim3.Instance->DIER = 0x04; // IC2 interrupt enabled (falling edge)
  60              		.loc 1 67 3 is_stmt 1 view .LVU15
  61              		.loc 1 67 24 is_stmt 0 view .LVU16
  62 001c 2D3A     		subs	r2, r2, #45
  63 001e DA60     		str	r2, [r3, #12]
  68:Core/Src/tim.c **** //  htim3.Instance->CR1 = TIM_CR1_CEN;
  69:Core/Src/tim.c **** }
  64              		.loc 1 69 1 view .LVU17
  65              		@ sp needed
  66 0020 7047     		bx	lr
  67              	.L3:
  68 0022 C046     		.align	2
  69              	.L2:
  70 0024 00000000 		.word	htim3
  71 0028 FFFF0000 		.word	65535
  72 002c 01020000 		.word	513
  73              		.cfi_endproc
  74              	.LFE38:
  76              		.section	.text.MX_TIMER_Enable,"ax",%progbits
  77              		.align	1
  78              		.global	MX_TIMER_Enable
  79              		.syntax unified
  80              		.code	16
  81              		.thumb_func
  82              		.fpu softvfp
  84              	MX_TIMER_Enable:
  85              	.LFB39:
  70:Core/Src/tim.c **** 
  71:Core/Src/tim.c **** void MX_TIMER_Enable(void)
  72:Core/Src/tim.c **** {
  86              		.loc 1 72 1 is_stmt 1 view -0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              		@ link register save eliminated.
  73:Core/Src/tim.c **** 	htim3.Instance->CR1 = 0x01;
  91              		.loc 1 73 2 view .LVU19
  92              		.loc 1 73 7 is_stmt 0 view .LVU20
  93 0000 024B     		ldr	r3, .L5
  94 0002 1B68     		ldr	r3, [r3]
  95              		.loc 1 73 22 view .LVU21
  96 0004 0122     		movs	r2, #1
  97 0006 1A60     		str	r2, [r3]
  74:Core/Src/tim.c **** }
  98              		.loc 1 74 1 view .LVU22
  99              		@ sp needed
 100 0008 7047     		bx	lr
ARM GAS  /var/folders/1q/c92fndb943774rkwjp6mf3kh0000gn/T//ccymVkfe.s 			page 4


 101              	.L6:
 102 000a C046     		.align	2
 103              	.L5:
 104 000c 00000000 		.word	htim3
 105              		.cfi_endproc
 106              	.LFE39:
 108              		.section	.text.MX_TIMER_Init,"ax",%progbits
 109              		.align	1
 110              		.global	MX_TIMER_Init
 111              		.syntax unified
 112              		.code	16
 113              		.thumb_func
 114              		.fpu softvfp
 116              	MX_TIMER_Init:
 117              	.LFB37:
  34:Core/Src/tim.c ****   //Enabler Timer clock
 118              		.loc 1 34 1 is_stmt 1 view -0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122 0000 10B5     		push	{r4, lr}
 123              	.LCFI0:
 124              		.cfi_def_cfa_offset 8
 125              		.cfi_offset 4, -8
 126              		.cfi_offset 14, -4
  36:Core/Src/tim.c **** //  mw32(0x40021038,0x10020001); // Enable TIM3 clock
 127              		.loc 1 36 3 view .LVU24
 128 0002 0C4A     		ldr	r2, .L8
 129 0004 936B     		ldr	r3, [r2, #56]
 130 0006 0221     		movs	r1, #2
 131 0008 0B43     		orrs	r3, r1
 132 000a 9363     		str	r3, [r2, #56]
  39:Core/Src/tim.c ****   htim3.Instance->PSC = 0;
 133              		.loc 1 39 3 view .LVU25
  39:Core/Src/tim.c ****   htim3.Instance->PSC = 0;
 134              		.loc 1 39 18 is_stmt 0 view .LVU26
 135 000c 0A4B     		ldr	r3, .L8+4
 136 000e 0B4A     		ldr	r2, .L8+8
 137 0010 1360     		str	r3, [r2]
  40:Core/Src/tim.c ****   htim3.Instance->ARR = 0xFFFF;
 138              		.loc 1 40 3 is_stmt 1 view .LVU27
  40:Core/Src/tim.c ****   htim3.Instance->ARR = 0xFFFF;
 139              		.loc 1 40 23 is_stmt 0 view .LVU28
 140 0012 0022     		movs	r2, #0
 141 0014 9A62     		str	r2, [r3, #40]
  41:Core/Src/tim.c **** //  htim3.Instance->CR1 = TIM_CR1_CEN;
 142              		.loc 1 41 3 is_stmt 1 view .LVU29
  41:Core/Src/tim.c **** //  htim3.Instance->CR1 = TIM_CR1_CEN;
 143              		.loc 1 41 23 is_stmt 0 view .LVU30
 144 0016 0A4A     		ldr	r2, .L8+12
 145 0018 DA62     		str	r2, [r3, #44]
  45:Core/Src/tim.c ****   HAL_NVIC_EnableIRQ(TIM3_IRQn);
 146              		.loc 1 45 3 is_stmt 1 view .LVU31
 147 001a 0022     		movs	r2, #0
 148 001c 0139     		subs	r1, r1, #1
 149 001e 1020     		movs	r0, #16
 150 0020 FFF7FEFF 		bl	HAL_NVIC_SetPriority
ARM GAS  /var/folders/1q/c92fndb943774rkwjp6mf3kh0000gn/T//ccymVkfe.s 			page 5


 151              	.LVL0:
  46:Core/Src/tim.c **** 
 152              		.loc 1 46 3 view .LVU32
 153 0024 1020     		movs	r0, #16
 154 0026 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 155              	.LVL1:
  49:Core/Src/tim.c **** 
 156              		.loc 1 49 3 view .LVU33
 157 002a FFF7FEFF 		bl	MX_TIMERIC_Init
 158              	.LVL2:
  52:Core/Src/tim.c **** }
 159              		.loc 1 52 3 view .LVU34
 160 002e FFF7FEFF 		bl	MX_TIMER_Enable
 161              	.LVL3:
  53:Core/Src/tim.c **** 
 162              		.loc 1 53 1 is_stmt 0 view .LVU35
 163              		@ sp needed
 164 0032 10BD     		pop	{r4, pc}
 165              	.L9:
 166              		.align	2
 167              	.L8:
 168 0034 00100240 		.word	1073876992
 169 0038 00040040 		.word	1073742848
 170 003c 00000000 		.word	htim3
 171 0040 FFFF0000 		.word	65535
 172              		.cfi_endproc
 173              	.LFE37:
 175              		.section	.text.MX_TIMER_Disable,"ax",%progbits
 176              		.align	1
 177              		.global	MX_TIMER_Disable
 178              		.syntax unified
 179              		.code	16
 180              		.thumb_func
 181              		.fpu softvfp
 183              	MX_TIMER_Disable:
 184              	.LFB40:
  75:Core/Src/tim.c **** 
  76:Core/Src/tim.c **** void MX_TIMER_Disable(void)
  77:Core/Src/tim.c **** {
 185              		.loc 1 77 1 is_stmt 1 view -0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              		@ link register save eliminated.
  78:Core/Src/tim.c **** 	htim3.Instance->CR1 = 0x00;
 190              		.loc 1 78 2 view .LVU37
 191              		.loc 1 78 7 is_stmt 0 view .LVU38
 192 0000 024B     		ldr	r3, .L11
 193 0002 1B68     		ldr	r3, [r3]
 194              		.loc 1 78 22 view .LVU39
 195 0004 0022     		movs	r2, #0
 196 0006 1A60     		str	r2, [r3]
  79:Core/Src/tim.c **** }
 197              		.loc 1 79 1 view .LVU40
 198              		@ sp needed
 199 0008 7047     		bx	lr
 200              	.L12:
ARM GAS  /var/folders/1q/c92fndb943774rkwjp6mf3kh0000gn/T//ccymVkfe.s 			page 6


 201 000a C046     		.align	2
 202              	.L11:
 203 000c 00000000 		.word	htim3
 204              		.cfi_endproc
 205              	.LFE40:
 207              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 208              		.align	1
 209              		.global	TIM3_IRQHandler
 210              		.syntax unified
 211              		.code	16
 212              		.thumb_func
 213              		.fpu softvfp
 215              	TIM3_IRQHandler:
 216              	.LFB41:
  80:Core/Src/tim.c **** 
  81:Core/Src/tim.c **** /* USER CODE BEGIN 1 */
  82:Core/Src/tim.c **** void TIM3_IRQHandler(void)
  83:Core/Src/tim.c **** {
 217              		.loc 1 83 1 is_stmt 1 view -0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 8
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221 0000 30B5     		push	{r4, r5, lr}
 222              	.LCFI1:
 223              		.cfi_def_cfa_offset 12
 224              		.cfi_offset 4, -12
 225              		.cfi_offset 5, -8
 226              		.cfi_offset 14, -4
 227 0002 83B0     		sub	sp, sp, #12
 228              	.LCFI2:
 229              		.cfi_def_cfa_offset 24
  84:Core/Src/tim.c ****   /* USER CODE BEGIN TIM30 */
  85:Core/Src/tim.c ****   // As the processing time is much faster in comparison to the uart baudrate
  86:Core/Src/tim.c ****   // The UART interrupt request is usually completed before the next interrupt
  87:Core/Src/tim.c **** 
  88:Core/Src/tim.c ****   uint32_t volatile isrflags   = READ_REG(htim3.Instance->SR);
 230              		.loc 1 88 3 view .LVU42
 231              		.loc 1 88 34 is_stmt 0 view .LVU43
 232 0004 114B     		ldr	r3, .L17
 233 0006 1B68     		ldr	r3, [r3]
 234 0008 1A69     		ldr	r2, [r3, #16]
 235              		.loc 1 88 21 view .LVU44
 236 000a 0192     		str	r2, [sp, #4]
  89:Core/Src/tim.c ****   uint16_t data_rising = 0; // CC register is 16bits
 237              		.loc 1 89 3 is_stmt 1 view .LVU45
 238              	.LVL4:
  90:Core/Src/tim.c ****   uint16_t data_falling = 0; // CC register is 16bits
 239              		.loc 1 90 3 view .LVU46
  91:Core/Src/tim.c ****   uint16_t data = 0;
 240              		.loc 1 91 3 view .LVU47
  92:Core/Src/tim.c **** 
  93:Core/Src/tim.c ****   if((isrflags & 0x02) != 0U) // CC2IF
 241              		.loc 1 93 3 view .LVU48
 242              		.loc 1 93 16 is_stmt 0 view .LVU49
 243 000c 019A     		ldr	r2, [sp, #4]
 244              		.loc 1 93 5 view .LVU50
 245 000e 9207     		lsls	r2, r2, #30
ARM GAS  /var/folders/1q/c92fndb943774rkwjp6mf3kh0000gn/T//ccymVkfe.s 			page 7


 246 0010 10D5     		bpl	.L14
  94:Core/Src/tim.c ****   {
  95:Core/Src/tim.c ****     data_rising = htim3.Instance->CCR1; //Rising edge capture counter
 247              		.loc 1 95 5 is_stmt 1 view .LVU51
 248              		.loc 1 95 33 is_stmt 0 view .LVU52
 249 0012 596B     		ldr	r1, [r3, #52]
 250              		.loc 1 95 17 view .LVU53
 251 0014 89B2     		uxth	r1, r1
 252              	.LVL5:
  96:Core/Src/tim.c ****     data_falling = htim3.Instance->CCR2; //Falling edge capture counter
 253              		.loc 1 96 5 is_stmt 1 view .LVU54
 254              		.loc 1 96 34 is_stmt 0 view .LVU55
 255 0016 9C6B     		ldr	r4, [r3, #56]
 256              		.loc 1 96 18 view .LVU56
 257 0018 A4B2     		uxth	r4, r4
 258              	.LVL6:
  97:Core/Src/tim.c ****     if (data_rising<data_falling) data = data_falling-data_rising; 
 259              		.loc 1 97 5 is_stmt 1 view .LVU57
 260              		.loc 1 97 8 is_stmt 0 view .LVU58
 261 001a A142     		cmp	r1, r4
 262 001c 10D2     		bcs	.L15
 263              		.loc 1 97 35 is_stmt 1 discriminator 1 view .LVU59
 264              		.loc 1 97 40 is_stmt 0 discriminator 1 view .LVU60
 265 001e 641A     		subs	r4, r4, r1
 266              	.LVL7:
 267              		.loc 1 97 40 discriminator 1 view .LVU61
 268 0020 A4B2     		uxth	r4, r4
 269              	.LVL8:
 270              	.L16:
  98:Core/Src/tim.c ****     else data = 0xffff+data_falling-data_rising;
  99:Core/Src/tim.c **** 
 100:Core/Src/tim.c ****     fifoWrite(&SRF_fifo,(uint8_t) ((data>>8)&0xFF)); //Store higher 8bits
 271              		.loc 1 100 5 is_stmt 1 view .LVU62
 272 0022 210A     		lsrs	r1, r4, #8
 273              	.LVL9:
 274              		.loc 1 100 5 is_stmt 0 view .LVU63
 275 0024 0A4D     		ldr	r5, .L17+4
 276 0026 2800     		movs	r0, r5
 277 0028 FFF7FEFF 		bl	fifoWrite
 278              	.LVL10:
 101:Core/Src/tim.c ****     fifoWrite(&SRF_fifo,(uint8_t) (data&0xFF)); //Store lower 8bits
 279              		.loc 1 101 5 is_stmt 1 view .LVU64
 280 002c E1B2     		uxtb	r1, r4
 281 002e 2800     		movs	r0, r5
 282 0030 FFF7FEFF 		bl	fifoWrite
 283              	.LVL11:
 284              	.L14:
 102:Core/Src/tim.c ****   }
 103:Core/Src/tim.c ****   htim3.Instance->SR=0;
 285              		.loc 1 103 3 view .LVU65
 286              		.loc 1 103 8 is_stmt 0 view .LVU66
 287 0034 054B     		ldr	r3, .L17
 288 0036 1B68     		ldr	r3, [r3]
 289              		.loc 1 103 21 view .LVU67
 290 0038 0022     		movs	r2, #0
 291 003a 1A61     		str	r2, [r3, #16]
 104:Core/Src/tim.c ****   /* USER CODE END USART2_IRQn 1 */
ARM GAS  /var/folders/1q/c92fndb943774rkwjp6mf3kh0000gn/T//ccymVkfe.s 			page 8


 105:Core/Src/tim.c **** }
 292              		.loc 1 105 1 view .LVU68
 293 003c 03B0     		add	sp, sp, #12
 294              		@ sp needed
 295 003e 30BD     		pop	{r4, r5, pc}
 296              	.LVL12:
 297              	.L15:
  98:Core/Src/tim.c **** 
 298              		.loc 1 98 10 is_stmt 1 view .LVU69
  98:Core/Src/tim.c **** 
 299              		.loc 1 98 36 is_stmt 0 view .LVU70
 300 0040 641A     		subs	r4, r4, r1
 301              	.LVL13:
  98:Core/Src/tim.c **** 
 302              		.loc 1 98 36 view .LVU71
 303 0042 A4B2     		uxth	r4, r4
  98:Core/Src/tim.c **** 
 304              		.loc 1 98 15 view .LVU72
 305 0044 013C     		subs	r4, r4, #1
 306 0046 A4B2     		uxth	r4, r4
 307              	.LVL14:
  98:Core/Src/tim.c **** 
 308              		.loc 1 98 15 view .LVU73
 309 0048 EBE7     		b	.L16
 310              	.L18:
 311 004a C046     		.align	2
 312              	.L17:
 313 004c 00000000 		.word	htim3
 314 0050 00000000 		.word	SRF_fifo
 315              		.cfi_endproc
 316              	.LFE41:
 318              		.comm	htim3,60,4
 319              		.comm	ADDR,4,4
 320              		.text
 321              	.Letext0:
 322              		.file 2 "/Users/yanli/arm/arm-none-eabi/include/machine/_default_types.h"
 323              		.file 3 "/Users/yanli/arm/arm-none-eabi/include/sys/_stdint.h"
 324              		.file 4 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/system_stm32l0xx.h"
 325              		.file 5 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l073xx.h"
 326              		.file 6 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 327              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_dma.h"
 328              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_tim.h"
 329              		.file 9 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_uart.h"
 330              		.file 10 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
 331              		.file 11 "/Users/yanli/arm/arm-none-eabi/include/sys/lock.h"
 332              		.file 12 "/Users/yanli/arm/arm-none-eabi/include/sys/_types.h"
 333              		.file 13 "/Users/yanli/arm/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 334              		.file 14 "/Users/yanli/arm/arm-none-eabi/include/sys/reent.h"
 335              		.file 15 "Core/Inc/fifo.h"
 336              		.file 16 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_cortex.h"
ARM GAS  /var/folders/1q/c92fndb943774rkwjp6mf3kh0000gn/T//ccymVkfe.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
/var/folders/1q/c92fndb943774rkwjp6mf3kh0000gn/T//ccymVkfe.s:16     .text.MX_TIMERIC_Init:0000000000000000 $t
/var/folders/1q/c92fndb943774rkwjp6mf3kh0000gn/T//ccymVkfe.s:24     .text.MX_TIMERIC_Init:0000000000000000 MX_TIMERIC_Init
/var/folders/1q/c92fndb943774rkwjp6mf3kh0000gn/T//ccymVkfe.s:70     .text.MX_TIMERIC_Init:0000000000000024 $d
                            *COM*:000000000000003c htim3
/var/folders/1q/c92fndb943774rkwjp6mf3kh0000gn/T//ccymVkfe.s:77     .text.MX_TIMER_Enable:0000000000000000 $t
/var/folders/1q/c92fndb943774rkwjp6mf3kh0000gn/T//ccymVkfe.s:84     .text.MX_TIMER_Enable:0000000000000000 MX_TIMER_Enable
/var/folders/1q/c92fndb943774rkwjp6mf3kh0000gn/T//ccymVkfe.s:104    .text.MX_TIMER_Enable:000000000000000c $d
/var/folders/1q/c92fndb943774rkwjp6mf3kh0000gn/T//ccymVkfe.s:109    .text.MX_TIMER_Init:0000000000000000 $t
/var/folders/1q/c92fndb943774rkwjp6mf3kh0000gn/T//ccymVkfe.s:116    .text.MX_TIMER_Init:0000000000000000 MX_TIMER_Init
/var/folders/1q/c92fndb943774rkwjp6mf3kh0000gn/T//ccymVkfe.s:168    .text.MX_TIMER_Init:0000000000000034 $d
/var/folders/1q/c92fndb943774rkwjp6mf3kh0000gn/T//ccymVkfe.s:176    .text.MX_TIMER_Disable:0000000000000000 $t
/var/folders/1q/c92fndb943774rkwjp6mf3kh0000gn/T//ccymVkfe.s:183    .text.MX_TIMER_Disable:0000000000000000 MX_TIMER_Disable
/var/folders/1q/c92fndb943774rkwjp6mf3kh0000gn/T//ccymVkfe.s:203    .text.MX_TIMER_Disable:000000000000000c $d
/var/folders/1q/c92fndb943774rkwjp6mf3kh0000gn/T//ccymVkfe.s:208    .text.TIM3_IRQHandler:0000000000000000 $t
/var/folders/1q/c92fndb943774rkwjp6mf3kh0000gn/T//ccymVkfe.s:215    .text.TIM3_IRQHandler:0000000000000000 TIM3_IRQHandler
/var/folders/1q/c92fndb943774rkwjp6mf3kh0000gn/T//ccymVkfe.s:313    .text.TIM3_IRQHandler:000000000000004c $d
                            *COM*:0000000000000004 ADDR

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
fifoWrite
SRF_fifo
